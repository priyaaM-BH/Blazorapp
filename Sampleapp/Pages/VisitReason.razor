@* @page "/visit-reason" *@
@page "/visit-reason"

@inherits BaseComponent;

<PageTitle>Visit reason</PageTitle>

<button @onclick="GoToPrevious">back</button>
@if(_appointmentSeries.IsEditing)
{
    <h4 class="header">Edit Visit reason</h4>
}
else
{
    <h4 class="header">Visit reason</h4>
}

<EditForm Model="@_wipAppointmentSeries.VisitReasonForm" OnValidSubmit="HandleValidSubmit">
    <div class="form-group">
        <label for="visitReasonName">Visit Reason Name</label>
        <InputText id="visitReasonName" class="form-control" @bind-Value="_wipAppointmentSeries.VisitReasonForm.VisitReasonName" />
    </div>

    <div class="form-group">
        <label for="patientRelationship">Patient Relationship</label>
        <InputText id="patientRelationship" class="form-control" @bind-Value="_wipAppointmentSeries.VisitReasonForm.PatientRelationship" />
    </div>

    <div class="form-group">
        <label for="visitMethod">Visit Method</label>
        <InputText id="visitMethod" class="form-control" @bind-Value="_wipAppointmentSeries.VisitReasonForm.VisitMethod" />
        @* <input type="checkbox" @bind="_wipAppointmentSeries.VisitReasonForm.VisitMethod" /> *@
    </div>

    <div class="form-group">
        <label for="reasonComment">Reason Comment</label>
        <InputTextArea id="reasonComment" class="form-control" @bind-Value="_wipAppointmentSeries.VisitReasonForm.ReasonComment" />
    </div>

    <button class="btn btn-primary" type="submit" >Next</button>
</EditForm>
<br>
<br>
<p>​I am a page component accessible through the NavigationManager and routing mechanisms.  </p>
@code {  
        private string? whereFrom { get; set; } 
        private bool ContainsEdit => _navigationManager.Uri.Contains("edit", StringComparison.OrdinalIgnoreCase);

        protected override void OnInitialized()
        {
            if(!BaseComponent.AppointmentPageDirectives.Contains("visit-reason"))
            {
                BaseComponent.AppointmentPageDirectives.Add("visit-reason");
            }
            
        }
        private void HandleValidSubmit() 
        {
            if(_wipAppointmentSeries.VisitReasonForm.VisitMethod.ToLower() == "video")
            {
                _wipAppointmentSeries.IsTelehealth = true;
            }
            else
            {
                _wipAppointmentSeries.IsTelehealth = false;
            }
            if(_inEdit)
            {
                _navigationManager.NavigateTo("/select-time");
            }
            else
            {
                _navigationManager.NavigateTo("/work-related");
            }

        }

        private void GoToPrevious()
        {
            BaseComponent.AppointmentPageDirectives.Remove("visit-reason");
            string whereFromValue = "appointment";
            string targetUrl = $"/controller/back/{whereFromValue}";
            _navigationManager.NavigateTo(targetUrl);
        }
    }